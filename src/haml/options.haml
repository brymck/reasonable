- require 'yaml'
!!! 5
%html
  %head
    %title reasonable
    - %w(options buttons).each do |style|
      %link{:rel => "stylesheet", :type => "text/css", :href => "/css/#{style}.css"}
    %script{:type => "text/javascript", :src => "/js/flattr.js"}
  %body
    %h1<
      %img{:src => "/img/icon_48.png", :alt => "logo", :title => "I put on my monocle and top hat",
           :height => "48", :width => "48"}>
      reason
      %span.able> able
    %p
      Hide trolls you don't want to see again, show the nice folks who have been improperly
      maligned, and leave on auto to let the update script do its thing. Note that I do not
      collect any identifying info via any of these options aside from server logs if you
      update the troll list, but none of that information will ever be shared with a third
      party.
    %table#container
      %tbody
        %tr
          %td#leftside
            %table#trolls
              %thead
                %tr
                  %th Trolls
              %tbody.scrollContent
            %br
            %input#troll{:type => "text", :placeholder => "Troll"}
            %button#add> Blacklist
            %br
            #support
              %p Support reasonably good programming:
              %ul.horizontal
                %li.align-top{:style => "min-width:110px"}
                  %a.FlattrButton{:style => "display:none;", :rev => "flattr;button:compact;", :href => "https://github.com/brymck/reasonable"}
                %li.align-top
                  %form{:action => "https://www.paypal.com/cgi-bin/webscr", :method => "post"}
                    %input{:type => "hidden", :name => "cmd", :value =>"_s-xclick"}
                    %input{:type => "hidden", :name => "encrypted", :value => "-----BEGIN PKCS7-----MIIHLwYJKoZIhvcNAQcEoIIHIDCCBxwCAQExggEwMIIBLAIBADCBlDCBjjELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMRYwFAYDVQQHEw1Nb3VudGFpbiBWaWV3MRQwEgYDVQQKEwtQYXlQYWwgSW5jLjETMBEGA1UECxQKbGl2ZV9jZXJ0czERMA8GA1UEAxQIbGl2ZV9hcGkxHDAaBgkqhkiG9w0BCQEWDXJlQHBheXBhbC5jb20CAQAwDQYJKoZIhvcNAQEBBQAEgYC+/affIwM1RCMj/XIEZ6E7++3yHU8Lv/zGCmVAbrG8a3EidOiiNW9LgdyS9Se8jhuC389RFw6Ji8/LtfrtXLeyVp29sWBFiV5gPYOyfEJYI3CNmewcbxcuFhDCjvTxSsZXARdtx4erHA0j8X8N4Dk91thp0s5sPwR2nZwD6VukQzELMAkGBSsOAwIaBQAwgawGCSqGSIb3DQEHATAUBggqhkiG9w0DBwQIlUjjzq+7VquAgYh92ybxOpFDbTpAe2PgYphWqzIBlhFgYMdMYr1vcFXajRAKRmrC0R0FB3p0B3kHkVm2sZmubgX0/VVRkOeLyDuVhzRieYQ2x3jTO1a9QCNPiI9Znfm4rYXtXyfc8gbhze1YY7ipgAso1veLWY55ZTzEsf0tFTluoOCQLx15Sb3lxEx3W+9K+sqEoIIDhzCCA4MwggLsoAMCAQICAQAwDQYJKoZIhvcNAQEFBQAwgY4xCzAJBgNVBAYTAlVTMQswCQYDVQQIEwJDQTEWMBQGA1UEBxMNTW91bnRhaW4gVmlldzEUMBIGA1UEChMLUGF5UGFsIEluYy4xEzARBgNVBAsUCmxpdmVfY2VydHMxETAPBgNVBAMUCGxpdmVfYXBpMRwwGgYJKoZIhvcNAQkBFg1yZUBwYXlwYWwuY29tMB4XDTA0MDIxMzEwMTMxNVoXDTM1MDIxMzEwMTMxNVowgY4xCzAJBgNVBAYTAlVTMQswCQYDVQQIEwJDQTEWMBQGA1UEBxMNTW91bnRhaW4gVmlldzEUMBIGA1UEChMLUGF5UGFsIEluYy4xEzARBgNVBAsUCmxpdmVfY2VydHMxETAPBgNVBAMUCGxpdmVfYXBpMRwwGgYJKoZIhvcNAQkBFg1yZUBwYXlwYWwuY29tMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDBR07d/ETMS1ycjtkpkvjXZe9k+6CieLuLsPumsJ7QC1odNz3sJiCbs2wC0nLE0uLGaEtXynIgRqIddYCHx88pb5HTXv4SZeuv0Rqq4+axW9PLAAATU8w04qqjaSXgbGLP3NmohqM6bV9kZZwZLR/klDaQGo1u9uDb9lr4Yn+rBQIDAQABo4HuMIHrMB0GA1UdDgQWBBSWn3y7xm8XvVk/UtcKG+wQ1mSUazCBuwYDVR0jBIGzMIGwgBSWn3y7xm8XvVk/UtcKG+wQ1mSUa6GBlKSBkTCBjjELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMRYwFAYDVQQHEw1Nb3VudGFpbiBWaWV3MRQwEgYDVQQKEwtQYXlQYWwgSW5jLjETMBEGA1UECxQKbGl2ZV9jZXJ0czERMA8GA1UEAxQIbGl2ZV9hcGkxHDAaBgkqhkiG9w0BCQEWDXJlQHBheXBhbC5jb22CAQAwDAYDVR0TBAUwAwEB/zANBgkqhkiG9w0BAQUFAAOBgQCBXzpWmoBa5e9fo6ujionW1hUhPkOBakTr3YCDjbYfvJEiv/2P+IobhOGJr85+XHhN0v4gUkEDI8r2/rNk1m0GA8HKddvTjyGw/XqXa+LSTlDYkqI8OwR8GEYj4efEtcRpRYBxV8KxAW93YDWzFGvruKnnLbDAF6VR5w/cCMn5hzGCAZowggGWAgEBMIGUMIGOMQswCQYDVQQGEwJVUzELMAkGA1UECBMCQ0ExFjAUBgNVBAcTDU1vdW50YWluIFZpZXcxFDASBgNVBAoTC1BheVBhbCBJbmMuMRMwEQYDVQQLFApsaXZlX2NlcnRzMREwDwYDVQQDFAhsaXZlX2FwaTEcMBoGCSqGSIb3DQEJARYNcmVAcGF5cGFsLmNvbQIBADAJBgUrDgMCGgUAoF0wGAYJKoZIhvcNAQkDMQsGCSqGSIb3DQEHATAcBgkqhkiG9w0BCQUxDxcNMTEwOTI1MDIyNTQyWjAjBgkqhkiG9w0BCQQxFgQUzVX7akAgDRLZSOuR40vOoSf5X7YwDQYJKoZIhvcNAQEBBQAEgYAu2Tsw5YB+iOFzrAgT1dOktOIALdh963OwVkmCRfbTiHFv2Up13maDo+MBBQI4KuiDGStYydVCBFp5JbRFEvP5wQVMA7uelqX9lO99wzXl52rvK6FLxG1O+xTECx6jpTsP6Fj0R2JF6V7QHpcdFIIG9W3etYdyfj8Ejc69By2pPQ==-----END PKCS7-----"}
                    %input{:type => "image", :src => "https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif", :border => 0, :name => "submit", :alt => "PayPal - The safer, easier way to pay online!"}
                    %img{:alt => "", :border => 0, :src => "https://www.paypalobjects.com/en_US/i/scr/pixel.gif", :width => 1, :height => 1}
          %td#rightside
            %ul#options
              - YAML.load_file(File.dirname(__FILE__) + "/../yml/options.yml").each do |option|
                - depth_class = "depth-#{option["depth"]}" unless option["depth"].nil?
                %li{:class => depth_class, :title => option["help"]}<
                  - if option["type"].nil?
                    %input{:id => option["id"], :type => "checkbox", :checked => option["checked"]}
                    %label{:for  => option["id"]}
                      -# The extra space at the beginning of the text prevents
                      -# RedCloth from wrapping the output in <p> tags
                      :textile
                         #{option["text"]}
                  - elsif option["type"] == "text"
                    %label{:for  => option["id"]}
                      :textile
                         #{option["text"]}
                    %input{:id => option["id"], :type => "text", :placeholder => option["placeholder"]}
                  - elsif option["type"] == "range"
                    .range
                      %label{:for => option["id"]}
                        :textile
                           #{option["text"]}
                      %br
                      %input{:id => option["id"], :type => "range", :min => 1, :max => 300}
                      %input.range_helper{:id => "#{option["id"]}_helper", :type => "number", :min => 1, :max => 300, :size => 5}
            %button#save Save &amp; Exit
    - %w(const jquery-1.6.1.min jquery.brymck options).each do |script|
      %script{:type => "text/javascript", :src => "/js/#{script}.js"}
